public class Main {
    /**
     * Рекурсия
     * Явление, когда функция вызывает саму себя внутри своих операторов.
     *
     * По сути рекурсия это некая замена цикла.
     *
     * Для реализации рекурсивных алгоритмов важно, чтобы обязательно было определено условие выхода из рекурсии.
     *
     * В рекурсии есть прямой и обратный ход:
     * Как только во время работы функции не произошёл рекурсивный вызов, начинается обратный ход, выполняющий,
     * все операции, ниже рекурсивного вызова.
     *
     * Для графов, бинарных деревьев и похожих структур рекурсивная реализация алгоритмов намного проще, чем итеративная.
     */

    static void PrintSequence(int n) {
        if (n >= 0) {
            PrintSequence(n - 1);
            System.out.printf("%d ", n);
        }
    }

    static int SumSequence(int n) {
        if (n > 0)
            return SumSequence(n - 1) + n;
        return 0;
    }

    public static void main(String[] args) {
        PrintSequence(10);
        System.out.printf("\nSum = %d", SumSequence(10));
    }
}