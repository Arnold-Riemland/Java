import java.util.Scanner;



public class Main {
    /**
     * Строки
     * Строка - последовательность символов.
     * Для работы со строками определён класс String.
     * Строка задаётся в двойных кавычках ""
     * Строки в Java неизменяемы (immutable), т.е. методы возвращают новую строку после изменения.
     *
     * Методы класса String
     *
     * length() - возвращает длину строки
     *
     * toUpperCase(), toLowerCase() - изменяет регистр строки на верхний/нижний
     *
     * charAt(индекс) - возвращает символ, находящийся в позиции <индекс>
     *
     * indexOf(символ_или_строка, [start]) - возвращает позицию первого вхождения символа или подстроки в
     * строку. Необязательный параметр start определяет позицию начала поиска в строке.
     * Если ничего не найдено, возвращается -1.
     *
     * lastIndexOf(...) - то же, что и indexOf(), только поиск идёт с конца строки.
     *
     * repeat(кол-во_повторений) - формирует строку, продублированную несколько раз.
     *
     * replace(заменяемое_значение, заменяющее_значение) - заменяет в строке одну подстроку на другую.
     * Возвращает строку с заменёнными частями.
     *
     * replaceAll(...), replaceFirst(...) - то же, что и replace, только можно использовать регулярные выражения в
     * качестве заменяемого выражения. replaceFirst заменяет только первую найденную подстроку.
     *
     * split(разделитель, [кол-во_замен]) - разделяет строку на части, использую разделитель. Разделителем может быть
     * символ, строка или регулярное выражение. Функция возвращает массив строк (разделённых частей).
     *
     * strip(), stripLeading(), stripTrailing(), trim() - удаляет из начала, конца или с обоих сторон пробельные
     * символы (пробел, табуляция, перенос строки). strip - с обоих сторон, stripLeading - из начала строки,
     * stripTrailing - из конца строки. trim - работает с кодировками более старыми, а strip с Unicode.
     *
     * startsWith(подстрока) - определяет, начинается ли строка с какой-либо подстроки. Возвращает true/false.
     *
     * substring(индекс_начала, [индекс_конца]) - возвращает часть подстроки.
     */
    public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
        String str = input.nextLine();
        String res = "";
        int sum=0;
        for (int i = 0; i < str.length(); i++) {
            if ('a' == str.charAt(i)) {
                res += 'b';
                sum++;
            } else res += str.charAt(i);
        }
        System.out.println(res);
        System.out.println(sum);
    }
}